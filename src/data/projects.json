{
  "webProjects": [
    {
      "id": 1,
      "title": "FaceRipple",
      "description": "Video Calling Realtime Chat App & Social App. Combines WebRTC with React for seamless peer-to-peer video chat. Integrates getStream API for real-time messaging, with MongoDB storing user data and messages. Tailwind CSS ensures responsive design. User authentication and room management are handled via Express and Node.js backend.",
      "image": "/assets/FaceRipple1.png",
      "technologies": [
        "React",
        "Node.js",
        "Express",
        "MongoDB",
        "Postman-Api",
        "Tailwind CSS",
        "getStream"
      ],
      "liveLink": "https://faceripple.onrender.com/",
      "codeLink": "https://github.com/Tharunkunamalla/FaceRipple"
    },
    {
      "id": 2,
      "title": "ResumeGenie Ai",
      "description": "An AI-powered Resume Analyzer and Generator. Utilizes OpenAI's GPT-3.5 Turbo to analyze resumes and generate feedback. Users can upload resumes and get ATS score and suggestions for improvements. Built with React and TypeScript, with Tailwind CSS for a modern UI. It helps job seekers optimize resumes for ATS systems.",
      "image": "/assets/ResumeGenie1.png",
      "technologies": [
        "React",
        "Typescript",
        "Puter.js",
        "Tailwind CSS",
        "OpenAI API"
      ],
      "liveLink": "https://resume-genie-ai.vercel.app/",
      "codeLink": "https://github.com/Tharunkunamalla/ResumeGenie-Ai"
    },
    {
      "id": 3,
      "title": "Sapphire Skies Resort",
      "description": "A fully functional resort booking system. It includes user registration, room selection, and booking history. Admin dashboard to manage rooms and bookings. Uses Clerk for user authentication. Frontend in React with Tailwind CSS and backend via Node.js, Express, and MongoDB.",
      "image": "/assets/sapphire.png",
      "technologies": [
        "React",
        "Tailwind CSS",
        "Node.js",
        "Express",
        "MongoDB",
        "Clerk"
      ],
      "liveLink": "https://sapphire-skies-resort.vercel.app/",
      "codeLink": "https://github.com/Tharunkunamalla/Sapphire-skies-resort"
    },
    {
      "id": 4,
      "title": "Tournament Management System",
      "description": "A PHP-based system to manage tournaments, players, matches, and schedules. Includes features for team registration, match fixtures, live score updates, and admin control. Database designed in SQL. Full stack project with frontend using HTML/CSS/JS and backend logic written in PHP.",
      "image": "/assets/TMS_proj.png",
      "technologies": ["Php", "SQL", "JS", "CSS", "HTML"],
      "liveLink": "",
      "codeLink": "https://github.com/Tharunkunamalla/TMS"
    },
    {
      "id": 5,
      "title": "Portfolio Website",
      "description": "Responsive personal portfolio with project showcase, contact form, and social media integration. Built using vanilla HTML/CSS/JS. Clean UI, animated sections, mobile-friendly layout. Hosted on Netlify.",
      "image": "/assets/portfolio.png",
      "technologies": ["Js", "CSS", "HTML"],
      "liveLink": "https://tharun-kunamalla.netlify.app/",
      "codeLink": "https://github.com/Tharunkunamalla/Portfolio-js"
    },
    {
      "id": 6,
      "title": "Gemini-AI",
      "description": "An AI chatbot interface styled like Google's Gemini. Uses OpenAI's GPT-3.5 for conversational abilities. Minimalistic UI built with vanilla JS/CSS. Aimed at providing clean UI inspiration for AI dashboard tools.",
      "image": "/assets/gemini.jpg",
      "technologies": ["JS", "Css", "OpenAI API"],
      "liveLink": "https://gemini-app-chatbot.vercel.app/",
      "codeLink": "https://github.com/Tharunkunamalla/Gemini_App"
    },
    {
      "id": 7,
      "title": "Jarvis -Voice Assistant",
      "description": "Voice-controlled assistant using browser\u2019s speech recognition. Responds to commands like Google search, opening apps, telling time. Built with JS and Web Speech API. Clean UI and smooth audio feedback.",
      "image": "/assets/jarvis.gif",
      "technologies": ["JS", "Google"],
      "liveLink": "https://jarvis-responder.vercel.app/",
      "codeLink": "https://github.com/Tharunkunamalla/Jarvis"
    }
  ],
  "machineLearningProjects": [
    {
      "id": 8,
      "title": "Brain Tumor MRI Classification",
      "description": "Deep learning-based classification of brain tumors using CNN and transfer learning with VGG16 and ResNet50. Deployed via Streamlit with UI to upload and predict on MRI scans.",
      "image": "/assets/brain_tumor.png",
      "technologies": ["Python", "TensorFlow", "Keras", "Streamlit"],
      "liveLink": "",
      "codeLink": "https://github.com/Tharunkunamalla/Project-3_Labmentix_Brain_Tumor_Img_cls"
    },
    {
      "id": 9,
      "title": "PhonePe Transactions Insights",
      "description": "EDA on PhonePe data using Pandas, visualized with Matplotlib. Shows transaction volume, types, and geographic distribution. Focus on data wrangling, visualization, and trends extraction.",
      "image": "/assets/phonepe.png",
      "technologies": ["Python", "Scikit-learn", "Pandas", "Matplotlib"],
      "liveLink": "",
      "codeLink": "https://github.com/Tharunkunamalla/Project-2-Labementix-PhonePe_Transaction_Insights"
    },
    {
      "id": 10,
      "title": "Shopper spectrum - Customer Segmentation",
      "description": "Clustering shoppers using K-means based on demographics and spending patterns. Visualized with Seaborn and deployed via Streamlit for real-time interaction and insights. Targeted towards marketing teams for behavior analysis.",
      "image": "/assets/shopper1.png",
      "technologies": [
        "Python",
        "Scikit-learn",
        "Pandas",
        "Matplotlib",
        "Seaborn",
        "Streamlit"
      ],
      "liveLink": "https://shopperspectrum-recommendation-ai.streamlit.app/",
      "codeLink": "https://github.com/Tharunkunamalla/Project-4-Shopper_spectrum-segmentation"
    },
    {
      "id": 11,
      "title": "Multi class fish classification",
      "description": "Multi-class classification of fish species using 5 pre-trained CNN models. Streamlit UI to upload fish image and receive prediction. Includes data augmentation and model comparison metrics.",
      "image": "/assets/fish1.png",
      "technologies": [
        "Python",
        "TensorFlow",
        "Keras",
        "Streamlit",
        "5 pre-trained models"
      ],
      "liveLink": "",
      "codeLink": "https://github.com/Tharunkunamalla/Project-4_Labementix_Multi_Class_Fish_Classification"
    }
  ]
}
